var _interopRequireDefault=require("@babel/runtime/helpers/interopRequireDefault");Object.defineProperty(exports,"__esModule",{value:true});exports.remove=exports.update=exports.create=exports.get=exports.list=void 0;var _regenerator=_interopRequireDefault(require("@babel/runtime/regenerator"));var _asyncToGenerator2=_interopRequireDefault(require("@babel/runtime/helpers/asyncToGenerator"));var _keystone=_interopRequireDefault(require("keystone"));var _modelHelper=_interopRequireDefault(require("../../../utils/modelHelper"));var Todo=_keystone.default.list('Todo');var list=function list(req,res){var search=new RegExp(req.query.search||'','i');var query=[{title:search},{description:search}];Todo.paginate({page:req.query.page||1,perPage:5,maxPages:10,filters:{$or:query}}).sort('-createdAt').exec(function(err,items){if(err)return res.status(500).json(err);return res.json({data:items});});};exports.list=list;var get=function get(req,res){Todo.model.findById(req.params.id).exec(function(err,item){if(err)return res.apiError('database error',err);if(!item)return res.apiError('not found');return res.status(200).json({data:item});});};exports.get=get;var create=function(){var _ref=(0,_asyncToGenerator2.default)(_regenerator.default.mark(function _callee(req,res){var instance,todo;return _regenerator.default.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:_context.prev=0;instance=new Todo.model();_context.next=4;return _modelHelper.default.process(instance,req);case 4:todo=_context.sent;res.status(201).json({data:todo});_context.next=11;break;case 8:_context.prev=8;_context.t0=_context["catch"](0);res.json({error:_context.t0},400);case 11:case"end":return _context.stop();}}},_callee,null,[[0,8]]);}));return function create(_x,_x2){return _ref.apply(this,arguments);};}();exports.create=create;var update=function(){var _ref2=(0,_asyncToGenerator2.default)(_regenerator.default.mark(function _callee2(req,res){var id,instance,todo;return _regenerator.default.wrap(function _callee2$(_context2){while(1){switch(_context2.prev=_context2.next){case 0:id=req.params.id;_context2.next=3;return Todo.model.findOne({_id:id});case 3:instance=_context2.sent;if(instance){_context2.next=6;break;}return _context2.abrupt("return",res.status(404).json('Error updating todo'));case 6:_context2.next=8;return _modelHelper.default.process(instance,req);case 8:todo=_context2.sent;return _context2.abrupt("return",res.status(200).json({item:todo}));case 10:case"end":return _context2.stop();}}},_callee2);}));return function update(_x3,_x4){return _ref2.apply(this,arguments);};}();exports.update=update;var remove=function remove(req,res){Todo.model.findById(req.params.id).exec(function(err,item){if(err)return res.apiError('database error',err);if(!item)return res.apiError('not found');item.remove(function(error){if(error)return res.apiError('database error',error);return res.json({success:true});});});};exports.remove=remove;