var _interopRequireWildcard=require("@babel/runtime/helpers/interopRequireWildcard");var _interopRequireDefault=require("@babel/runtime/helpers/interopRequireDefault");var _regenerator=_interopRequireDefault(require("@babel/runtime/regenerator"));var _asyncToGenerator2=_interopRequireDefault(require("@babel/runtime/helpers/asyncToGenerator"));var _expect=_interopRequireDefault(require("expect"));var _base=_interopRequireWildcard(require("../utils/base"));var _routes=require("../../routes");var todoData={title:'title',description:'description'};var apiCreateTodo=function apiCreateTodo(){var data=arguments.length>0&&arguments[0]!==undefined?arguments[0]:todoData;return _base.default.post(_routes.todoPath).send(data);};var apiUpdateTodo=function apiUpdateTodo(id){var data=arguments.length>1&&arguments[1]!==undefined?arguments[1]:todoData;return _base.default.put(_routes.todoPath+"/"+id).send(data);};var apiListTodo=function apiListTodo(){var parameters=arguments.length>0&&arguments[0]!==undefined?arguments[0]:{};return _base.default.get(_routes.todoPath).query(parameters).send();};var apiGetTodo=function apiGetTodo(id){return _base.default.get(_routes.todoPath+"/"+id).send();};var apiDeleteTodo=function apiDeleteTodo(id){return _base.default.delete(_routes.todoPath+"/"+id).send();};describe('Todo',function(){var res;describe('Create todo',function(){it('should create todo successfully when data is valid',(0,_asyncToGenerator2.default)(_regenerator.default.mark(function _callee(){return _regenerator.default.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:_context.next=2;return apiCreateTodo();case 2:res=_context.sent;(0,_expect.default)(res.status).toBe(201);case 4:case"end":return _context.stop();}}},_callee);})));});describe('Update todo',function(){it('should update todo successfully when data is valid',(0,_asyncToGenerator2.default)(_regenerator.default.mark(function _callee2(){var todo;return _regenerator.default.wrap(function _callee2$(_context2){while(1){switch(_context2.prev=_context2.next){case 0:_context2.next=2;return(0,_base.createTodo)();case 2:todo=_context2.sent;_context2.next=5;return apiUpdateTodo(todo._id);case 5:res=_context2.sent;(0,_expect.default)(res.status).toBe(200);case 7:case"end":return _context2.stop();}}},_callee2);})));});describe('Get todo',function(){it('should get todo successfully when data is valid',(0,_asyncToGenerator2.default)(_regenerator.default.mark(function _callee3(){var todo;return _regenerator.default.wrap(function _callee3$(_context3){while(1){switch(_context3.prev=_context3.next){case 0:_context3.next=2;return(0,_base.createTodo)();case 2:todo=_context3.sent;_context3.next=5;return apiGetTodo(todo._id);case 5:res=_context3.sent;(0,_expect.default)(res.status).toBe(200);case 7:case"end":return _context3.stop();}}},_callee3);})));});describe('Delet todo',function(){it('should delete todo successfully when data is valid',(0,_asyncToGenerator2.default)(_regenerator.default.mark(function _callee4(){var todo;return _regenerator.default.wrap(function _callee4$(_context4){while(1){switch(_context4.prev=_context4.next){case 0:_context4.next=2;return(0,_base.createTodo)();case 2:todo=_context4.sent;_context4.next=5;return apiDeleteTodo(todo._id);case 5:res=_context4.sent;(0,_expect.default)(res.status).toBe(200);case 7:case"end":return _context4.stop();}}},_callee4);})));});describe('List todo',function(){it('should list todo successfully',(0,_asyncToGenerator2.default)(_regenerator.default.mark(function _callee5(){return _regenerator.default.wrap(function _callee5$(_context5){while(1){switch(_context5.prev=_context5.next){case 0:_context5.next=2;return apiListTodo();case 2:res=_context5.sent;(0,_expect.default)(res.status).toBe(200);case 4:case"end":return _context5.stop();}}},_callee5);})));});});